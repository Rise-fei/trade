# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2022-05-11 19:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustLoginRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('oa_session_key', models.CharField(max_length=64)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'cust_login_record',
            },
        ),
        migrations.CreateModel(
            name='EmailRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(default='', max_length=64)),
                ('dest_mail', models.CharField(default='', max_length=128)),
                ('send_status', models.BooleanField()),
                ('letter_title', models.CharField(default='', max_length=128)),
                ('send_email', models.CharField(default='', max_length=64)),
                ('port', models.IntegerField()),
                ('server', models.CharField(default='', max_length=32)),
                ('protocol', models.CharField(default='', max_length=16)),
                ('ip', models.CharField(max_length=64)),
                ('send_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'email_record',
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('content', tinymce.models.HTMLField()),
            ],
            options={
                'db_table': 'letter',
            },
        ),
        migrations.CreateModel(
            name='RequestCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('customer', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='SearchKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'search_key',
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(db_index=True, max_length=128)),
                ('company', models.CharField(default='', max_length=512)),
                ('website', models.CharField(default='', max_length=512)),
                ('description', models.CharField(default='', max_length=512)),
                ('email', models.CharField(default='', max_length=512)),
                ('addr', models.CharField(default='', max_length=512)),
                ('phone', models.CharField(default='', max_length=256)),
                ('facebook', models.CharField(default='', max_length=512)),
                ('twitter', models.CharField(default='', max_length=512)),
                ('query_flag', models.CharField(default=1, max_length=4)),
            ],
            options={
                'db_table': 'search_result',
            },
        ),
        migrations.CreateModel(
            name='Sender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=64)),
                ('port', models.IntegerField()),
                ('server', models.CharField(max_length=32)),
                ('protocol', models.CharField(default='smtp', max_length=16)),
                ('password', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'sender',
            },
        ),
        migrations.CreateModel(
            name='SensitiveWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('update_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='WaitSendCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
                ('company', models.CharField(max_length=256)),
                ('website', models.CharField(max_length=256)),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('sort_id', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'db_table': 'wait_send_customer',
            },
        ),
        migrations.AddField(
            model_name='sender',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.AddField(
            model_name='searchresult',
            name='user',
            field=models.ManyToManyField(to='user.User'),
        ),
        migrations.AddField(
            model_name='searchkey',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.AddField(
            model_name='letter',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.AddField(
            model_name='emailrecord',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
    ]
